# CloudFormation template for AWS infrastructure
# This creates EC2 instance with security groups and IAM roles

AWSTemplateFormatVersion: '2010-09-09'
Description: 'Book Exchange MERN Application Infrastructure'

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.micro
    AllowedValues: [t2.micro, t2.small, t2.medium, t3.micro, t3.small, t3.medium]

Resources:
  # Security Group for EC2 instance
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Book Exchange web server
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5001
          ToPort: 5001
          CidrIp: 0.0.0.0/0

  # IAM Role for EC2 instance
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy

  # Instance Profile
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref EC2Role]

  # EC2 Instance
  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c02fb55956c7d316  # Amazon Linux 2 AMI (update as needed)
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds: [!Ref WebServerSecurityGroup]
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          curl -fsSL https://rpm.nodesource.com/setup_18.x | bash -
          yum install -y nodejs git
          npm install -g pm2
          amazon-linux-extras install nginx1 -y
          systemctl enable nginx
          systemctl start nginx
          mkdir -p /var/www/bookexchange
          chown ec2-user:ec2-user /var/www/bookexchange
          mkdir -p /var/log/pm2
          chown ec2-user:ec2-user /var/log/pm2

      Tags:
        - Key: Name
          Value: BookExchange-WebServer

Outputs:
  PublicIP:
    Description: Public IP address of the web server
    Value: !GetAtt WebServerInstance.PublicIp
    Export:
      Name: !Sub '${AWS::StackName}-PublicIP'

  PublicDNS:
    Description: Public DNS name of the web server
    Value: !GetAtt WebServerInstance.PublicDnsName
    Export:
      Name: !Sub '${AWS::StackName}-PublicDNS'

  WebsiteURL:
    Description: URL of the web application
    Value: !Sub 'http://${WebServerInstance.PublicDnsName}'